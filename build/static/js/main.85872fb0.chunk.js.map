{"version":3,"sources":["assets/images/world3.png","assets/images/map4.png","reducers/homeReducer.js","reducers/index.js","actions/types.js","store.js","components/InnerNavbar.js","pages/Home.js","actions/homeActions.js","pages/Home2.js","pages/Home3.js","components/Main.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","initialState","dataItems","combineReducers","home","state","action","type","payload","middleware","thunk","store","createStore","rootreducer","compose","applyMiddleware","window","__REDUX_DEVTOOLS_EXTENSION__","a","React","Component","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","FlexibleXYPlot","makeWidthFlexible","XYPlot","ITEMS1","title","color","ITEMS2","ITEMSNEWCASES","ITEMSNEWCASESBAR","ITEMSTOTALCONFIRMED","ITEMSPIEOVERALL","Home","props","uiConfig","signInFlow","signInOptions","auth","GoogleAuthProvider","PROVIDER_ID","callbacks","signInSuccessWithAuthResult","handlePieMouseOver","toggle","bind","isSignedIn","isOpen","useCanvas","graph_data_1","graph_data_2","indiaConfirmed","indiaActive","indiaDeaths","indiaRecovered","pieData","graph_data_11","graph_data_13","graph_data_14","hoveredNode1","hoveredNode2","hoveredNode3","hoveredNodeNewDeaths","hoveredNodeNewCases","hoveredNodeNewCasesBar","hoveredNodeTotalConfirmed","this","setState","unregisterAuthObserver","onAuthStateChanged","user","fetchLargeData","prevProps","largeData","graph11","graph13","graph14","graph21","cases_time_series","map","casee","i","push","x","y","totalconfirmed","totalrecovered","totaldeceased","dailydeceased","graph1","graph2","dailyconfirmed","statewise","confirmed","active","deaths","recovered","graph_data_21","angle","label","Line","LineSeriesCanvas","LineSeries","BarSeries","VerticalBarSeriesCanvas","VerticalBarSeries","key","scope","className","yDomain","xDomain","Navbar","expand","NavbarBrand","href","NavbarToggler","onClick","Collapse","navbar","Nav","currentUser","displayName","Button","outline","signOut","Container","fluid","Row","Col","md","xs","height","margin","left","onMouseLeave","text","includeMargin","xPercent","yPercent","style","transform","textAnchor","data","onNearestX","value","index","xOffset","yOffset","getX","d","getY","Date","Confirmed","Recovered","Deaths","marginLeft","marginTop","orientation","items","overflow","Table","hover","display","alignItems","width","colorType","showLabels","onValueMouseOver","firebaseAuth","connect","dispatch","fetch","then","res","json","laData","console","log","Home2","src","require","Home3","Main","exact","path","component","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.85872fb0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/world3.4785af01.png\";","module.exports = __webpack_public_path__ + \"static/media/map4.d190431a.png\";","import { FETCH_LARGE_DATA } from '../actions/types';\r\n\r\nconst initialState = {\r\n  dataItems: []\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch(action.type) {\r\n    case FETCH_LARGE_DATA:\r\n      return {\r\n        ...state,\r\n        dataItems: action.payload\r\n      }\r\n    // case NEW_POST:\r\n    //   return {\r\n    //     ...state,\r\n    //     item: action.payload\r\n    //   }\r\n    default:\r\n      return state;\r\n  }\r\n}","import { combineReducers } from 'redux';\r\nimport homeReducer from './homeReducer';\r\n\r\nexport default combineReducers({\r\n  home: homeReducer\r\n});","export const FETCH_LARGE_DATA = 'FETCH_LARGE_DATA';","import {createStore, applyMiddleware, compose} from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootreducer from './reducers';\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\n// const store = createStore(rootreducer, initialState, applyMiddleware(...middleware));\r\nconst store = createStore(\r\n  rootreducer, \r\n  initialState, \r\n  compose (\r\n    applyMiddleware(...middleware),\r\n    typeof window.__REDUX_DEVTOOLS_EXTENSION__ === \"undefined\"\r\n      ? a => a\r\n      : window.__REDUX_DEVTOOLS_EXTENSION__ &&\r\n          window.__REDUX_DEVTOOLS_EXTENSION__()\r\n    // window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n  )\r\n);\r\n\r\nexport default store;","import React from 'react';\r\nimport * as firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\n\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Link,\r\n  Redirect,\r\n  withRouter\r\n} from 'react-router-dom';\r\nimport {\r\n  Collapse,\r\n  Navbar,\r\n  NavbarToggler,\r\n  NavbarBrand,\r\n  Nav,\r\n  NavItem,\r\n  UncontrolledDropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem } from 'reactstrap';\r\nimport { Container, Row, Col } from 'reactstrap';  \r\nimport { Button, Form, FormGroup, Label, Input, FormText } from 'reactstrap';\r\n\r\nlet root_url = 'http://192.168.1.3/codes/react-experiments/03_Go_Go_Jump_react_web/backend/';\r\n\r\nexport default class InnerNavbar extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.toggle = this.toggle.bind(this);\r\n    this.logout = this.logout.bind(this);\r\n\r\n    this.state = {\r\n      isOpen: false,\r\n      auth_success: true\r\n    };\r\n  }\r\n  toggle() {\r\n    this.setState({\r\n        isOpen: !this.state.isOpen\r\n    });\r\n  }\r\n\r\n  logout() {\r\n    \r\n    // firebase.auth().signOut().then(function() {\r\n    //   // Sign-out successful.\r\n    // }).catch(function(error) {\r\n    //   // An error happened.\r\n    // });\r\n\r\n  }\r\n\r\n  render() {\r\n\r\n    // if (this.state.auth_success === false) {\r\n    //   return <Redirect to='/' />\r\n    // }\r\n\r\n    return(\r\n      <div>\r\n        <Navbar color=\"\" expand=\"md\" className=\"header fixed-top\">\r\n          <NavbarBrand href=\"/home\" className=\"\">Track Corona Track</NavbarBrand>\r\n          <NavbarToggler onClick={this.toggle} />\r\n          <Collapse isOpen={this.state.isOpen} navbar>\r\n              <Nav className=\"ml-auto\" navbar>\r\n                {/* <NavItem>\r\n                  <Link to=\"\" className=\"nav-link\" style={{color: 'aqua'}}>Shopping</Link>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <Link className=\"nav-link\">|</Link>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <Link to=\"/home\" className=\"nav-link\">Home</Link>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <Link to=\"/explore\" className=\"nav-link\">Explore</Link>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <Link to=\"/events\" className=\"nav-link\">Events</Link>\r\n                </NavItem> */}\r\n                {/* <NavItem>\r\n                  <Link to=\"/business\" className=\"nav-link\">Business</Link>\r\n                </NavItem> */}\r\n                {/* <NavItem>\r\n                  <Link to=\"/shopping\" className=\"nav-link\">Shopping</Link>\r\n                </NavItem> */}\r\n                {/* <NavItem>\r\n                  <Link to=\"/people\" className=\"nav-link\">People</Link>\r\n                </NavItem> */}\r\n                {/* <NavItem>\r\n                    <Link to=\"/friends\" className=\"nav-link\">Friends</Link>\r\n                </NavItem>\r\n                <NavItem>\r\n                    <Link to=\"/notifications\" className=\"nav-link\">Notifications</Link>\r\n                </NavItem>\r\n                <NavItem>\r\n                    <Link to=\"/chat\" className=\"nav-link\">Chat</Link>\r\n                </NavItem> */}\r\n                {/* <NavItem>\r\n                  <Link to=\"/profile\" className=\"nav-link\">Profile</Link>\r\n                </NavItem> */}\r\n                {/* <div onClick={this.logout}>Logout</div> */}\r\n                <Button outline color=\"primary\" onClick={this.logout}>Logout</Button>\r\n                {/* <UncontrolledDropdown nav inNavbar>\r\n                  <DropdownToggle nav caret>\r\n                    More\r\n                  </DropdownToggle>\r\n                  <DropdownMenu right>\r\n                    <DropdownItem>\r\n                      Groups\r\n                    </DropdownItem>\r\n                    <DropdownItem>\r\n                      Public Pages\r\n                    </DropdownItem>\r\n                    <DropdownItem onClick={this.logout}>\r\n                      Logout\r\n                    </DropdownItem>\r\n                  </DropdownMenu>\r\n                </UncontrolledDropdown> */}\r\n              </Nav>\r\n          </Collapse>\r\n        </Navbar>             \r\n\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\n\r\nfunction setCookie(name,value,days) {\r\n\tvar expires = \"\";\r\n\tif (days) {\r\n\t\t\tvar date = new Date();\r\n\t\t\tdate.setTime(date.getTime() + (days*24*60*60*1000));\r\n\t\t\texpires = \"; expires=\" + date.toUTCString();\r\n\t}\r\n\tdocument.cookie = name + \"=\" + (value || \"\")  + expires + \"; path=/\";\r\n}\r\nfunction getCookie(name) {\r\n\tvar nameEQ = name + \"=\";\r\n\tvar ca = document.cookie.split(';');\r\n\tfor(var i=0;i < ca.length;i++) {\r\n\t\t\tvar c = ca[i];\r\n\t\t\twhile (c.charAt(0)===' ') c = c.substring(1,c.length);\r\n\t\t\tif (c.indexOf(nameEQ) === 0) return c.substring(nameEQ.length,c.length);\r\n\t}\r\n\treturn null;\r\n}\r\nfunction eraseCookie(name) {   \r\n\tdocument.cookie = name+'=; Max-Age=-99999999;';  \r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { fetchLargeData } from '../actions/homeActions';\r\n\r\nimport StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth';\r\nimport firebase from 'firebase';\r\n\r\nimport {\r\n  Collapse,\r\n  Navbar,\r\n  NavbarToggler,\r\n  NavbarBrand,\r\n  Nav,\r\n  NavItem,\r\n  UncontrolledDropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem } from 'reactstrap';\r\nimport { Container, Row, Col } from 'reactstrap';\r\nimport { Button, Form, FormGroup, Label, Input, FormText } from 'reactstrap';\r\nimport { Table } from 'reactstrap';\r\nimport {\r\n  XYPlot,\r\n  XAxis,\r\n  YAxis,\r\n  ChartLabel,\r\n  HorizontalGridLines,\r\n  VerticalGridLines,\r\n  LineSeries,\r\n  LineSeriesCanvas,\r\n  VerticalBarSeries,\r\n  VerticalBarSeriesCanvas,\r\n  LabelSeries,\r\n  Hint,\r\n  makeWidthFlexible,\r\n  RadialChart\r\n} from 'react-vis';\r\nimport \"react-vis/dist/style.css\";\r\nimport InnerNavbar from '../components/InnerNavbar';\r\n\r\n// import DiscreteColorLegend from 'legends/discrete-color-legend';\r\nimport DiscreteColorLegend from 'react-vis/dist/legends/discrete-color-legend';\r\nimport GradientDefs from 'react-vis/dist/plot/gradient-defs';\r\n\r\n// Configure Firebase.\r\nconst config = {\r\n  apiKey: \"AIzaSyBG0HaNk2YWBp1cHllsVpYszZFI3J-hG1c\",\r\n  authDomain: \"trackcoronatrack01.firebaseapp.com\",\r\n  databaseURL: \"https://trackcoronatrack01.firebaseio.com\",\r\n  projectId: \"trackcoronatrack01\",\r\n  storageBucket: \"trackcoronatrack01.appspot.com\",\r\n  messagingSenderId: \"245771598728\",\r\n  appId: \"1:245771598728:web:402f79ff525fd35f13983d\",\r\n  measurementId: \"G-QDTDEHXB7J\"\r\n};\r\nfirebase.initializeApp(config);\r\n\r\n\r\nconst FlexibleXYPlot = makeWidthFlexible(XYPlot); \r\n\r\nconst ITEMS1 = [\r\n  {title: 'confirmed', color: '#FFCA28'},\r\n  {title: 'recovered', color: '#43A047'},\r\n  {title: 'deaths', color: '#e53935'}\r\n];\r\nconst ITEMS2 = [\r\n  {title: 'deaths', color: '#e53935'}\r\n];\r\nconst ITEMSNEWCASES = [\r\n  {title: 'confirmed', color: '#FFCA28'}\r\n];\r\nconst ITEMSNEWCASESBAR = [\r\n  {title: 'confirmed', color: '#FFCA28'}\r\n];\r\nconst ITEMSTOTALCONFIRMED = [\r\n  {title: 'confirmed', color: '#FFCA28'}\r\n];\r\n\r\nconst ITEMSPIEOVERALL = [\r\n  {title: 'deaths', color: '#e57373'},\r\n  {title: 'active', color: '#78909C'},\r\n  {title: 'recovered', color: '#81C784'}\r\n];\r\n\r\n\r\n\r\nclass Home extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.toggle = this.toggle.bind(this);\r\n    // this.logout = this.logout.bind(this);\r\n\r\n    this.state = {\r\n      isSignedIn: false,\r\n      isOpen: false,\r\n      // statewise: [],\r\n      useCanvas: false,\r\n      // cases_time_series: [],\r\n\r\n      graph_data_1: [],\r\n      graph_data_2: [],\r\n\r\n      indiaConfirmed: null,\r\n      indiaActive: null,\r\n      indiaDeaths: null,\r\n      indiaRecovered: null,\r\n\r\n      pieData: [],\r\n\r\n      graph_data_11: [],\r\n      // graph_data_12: [],\r\n      graph_data_13: [],\r\n      graph_data_14: [],\r\n\r\n      hoveredNode1: null,\r\n      hoveredNode2: null,\r\n      hoveredNode3: null,\r\n\r\n      hoveredNodeNewDeaths: null,\r\n      hoveredNodeNewCases: null,\r\n      hoveredNodeNewCasesBar: null,\r\n      hoveredNodeTotalConfirmed: null\r\n    }\r\n  }\r\n\r\n  toggle() {\r\n    this.setState({\r\n        isOpen: !this.state.isOpen\r\n    });\r\n  }\r\n\r\n  // Configure FirebaseUI.\r\n  uiConfig = {\r\n    // Popup signin flow rather than redirect flow.\r\n    signInFlow: 'popup',\r\n    // We will display Google and Facebook as auth providers.\r\n    signInOptions: [\r\n      firebase.auth.GoogleAuthProvider.PROVIDER_ID\r\n    ],\r\n    callbacks: {\r\n      // Avoid redirects after sign-in.\r\n      signInSuccessWithAuthResult: () => false\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.unregisterAuthObserver = firebase.auth().onAuthStateChanged(\r\n      (user) => this.setState({isSignedIn: !!user})\r\n    );\r\n    // check if login cookie already exists\r\n    // this.fetchIndiaData();\r\n    this.props.fetchLargeData();\r\n  }\r\n\r\n  // Make sure we un-register Firebase observers when the component unmounts.\r\n  componentWillUnmount() {\r\n    this.unregisterAuthObserver();\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n\r\n    if(this.props.largeData !== prevProps.largeData) {\r\n\r\n      var graph11 = [];\r\n      // var graph12 = [];\r\n      var graph13 = [];\r\n      var graph14 = [];\r\n\r\n      var graph21 = [];\r\n      this.props.largeData.cases_time_series.map((casee, i) => {\r\n        graph11.push({\r\n          x: i,\r\n          y: casee.totalconfirmed\r\n        });\r\n        // graph12.push({\r\n        //   x: i,\r\n        //   y: casee.totalactive\r\n        // });\r\n        graph13.push({\r\n          x: i,\r\n          y: casee.totalrecovered\r\n        });\r\n        graph14.push({\r\n          x: i,\r\n          y: casee.totaldeceased\r\n        });\r\n\r\n        \r\n        graph21.push({\r\n          x: i,\r\n          y: casee.dailydeceased\r\n        });\r\n      });\r\n\r\n        // GRAPH 1\r\n        var graph1 = [];\r\n        this.props.largeData.cases_time_series.map((casee, i) => {\r\n          graph1.push({\r\n            x: i,\r\n            // x: casee.date,\r\n            y: casee.totalconfirmed\r\n          });\r\n        });\r\n\r\n        // GRAPH 2\r\n        var graph2 = [];\r\n        this.props.largeData.cases_time_series.map((casee, i) => {\r\n          graph2.push({\r\n            x: i,\r\n            y: casee.dailyconfirmed\r\n          });\r\n        });\r\n\r\n        this.setState({\r\n          indiaConfirmed: this.props.largeData.statewise[0].confirmed,\r\n          indiaActive: this.props.largeData.statewise[0].active,\r\n          indiaDeaths: this.props.largeData.statewise[0].deaths,\r\n          indiaRecovered: this.props.largeData.statewise[0].recovered,\r\n          graph_data_1: graph1,\r\n          graph_data_2: graph2,\r\n\r\n          graph_data_11: graph11,\r\n          // graph_data_12: graph12,\r\n          graph_data_13: graph13,\r\n          graph_data_14: graph14,\r\n\r\n          graph_data_21: graph21,\r\n\r\n          pieData: [\r\n            { angle: this.props.largeData.statewise[0].deaths, color: '#e57373', label: 'deaths' },\r\n            { angle: this.props.largeData.statewise[0].active, color: '#78909C', label: 'active' },\r\n            { angle: this.props.largeData.statewise[0].recovered, color: '#81C784', label: 'recovered' },\r\n          ]\r\n        }) \r\n        // const pieData = [{angle: 1}, {angle: 5}, {angle: 2}];\r\n    }\r\n\r\n  }\r\n\r\n  handlePieMouseOver = () => {\r\n\r\n  }\r\n\r\n\r\n  render () {\r\n    const {useCanvas} = this.state;\r\n    const { hoveredNode1, hoveredNode2, hoveredNode3, hoveredNodeNewDeaths, hoveredNodeNewCases, hoveredNodeNewCasesBar, hoveredNodeTotalConfirmed } = this.state;\r\n    const content = useCanvas ? 'TOGGLE TO SVG' : 'TOGGLE TO CANVAS';\r\n    const Line = useCanvas ? LineSeriesCanvas : LineSeries;\r\n    const BarSeries = useCanvas ? VerticalBarSeriesCanvas : VerticalBarSeries;\r\n\r\n\r\n    var statewise = '';\r\n    if(this.props.largeData.statewise) {\r\n\r\n      statewise = this.props.largeData.statewise.map((state, i) => {\r\n        return (\r\n          <tr key={state.state}>\r\n            <th scope=\"row\">#</th>\r\n            <td>{state.state}</td>\r\n            <td>{state.confirmed}</td>\r\n            <td>{state.active}</td>\r\n            <td className=\"state-deaths-num\">{state.deaths}</td>\r\n            <td className=\"state-recovered-num\">{state.recovered}</td>\r\n          </tr>\r\n        )\r\n      })\r\n    }\r\n\r\n    var yDomain = [0, 5000000];\r\n    var xDomain = [0, 250];\r\n\r\n    if (!this.state.isSignedIn) {\r\n      return (\r\n        <div className=\"text-center\">\r\n          <h1>TrackCoronaTrack</h1>\r\n          <p>Please sign-in to view India dashboard</p>\r\n          <StyledFirebaseAuth uiConfig={this.uiConfig} firebaseAuth={firebase.auth()}/>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div className=\"h1-container\">\r\n        {/* <InnerNavbar /> */}\r\n\r\n        <div>\r\n          <Navbar color=\"\" expand=\"md\" className=\"header fixed-top\">\r\n            <NavbarBrand href=\"/home\" className=\"\">Track Corona Track</NavbarBrand>\r\n            <NavbarToggler onClick={this.toggle} />\r\n            <Collapse isOpen={this.state.isOpen} navbar>\r\n                <Nav className=\"ml-auto\" navbar>\r\n                  <div className=\"user-name-div\">Welcome {firebase.auth().currentUser.displayName}!</div>\r\n                  <Button outline color=\"primary\" onClick={() => firebase.auth().signOut()}>Logout</Button>\r\n                </Nav>\r\n            </Collapse>\r\n          </Navbar>\r\n        </div>\r\n\r\n\r\n        <Container fluid>\r\n\r\n          <Row className=\"mt-4\">\r\n\r\n            <Col md={2}></Col>\r\n\r\n            <Col md={8}>\r\n\r\n              <div className=\"heading1\">Covid-19 Dasboard India</div>\r\n\r\n              <Row className=\"mb-5\">\r\n                <Col md={3} xs={6}>\r\n                  <div className=\"card1\">\r\n                    <div><span className=\"card1-in\">India</span> Cases</div>\r\n                    <div className=\"in-cases\">{this.state.indiaConfirmed}</div>\r\n                  </div>\r\n                </Col>\r\n                <Col md={3} xs={6}>\r\n                  <div className=\"card1\">\r\n                    <div><span className=\"card1-in\">India</span> Active</div>\r\n                    <div className=\"in-active\">{this.state.indiaActive}</div>\r\n                  </div>\r\n                </Col>\r\n                <Col md={3} xs={6}>\r\n                  <div className=\"card1\">\r\n                    <div><span className=\"card1-in\">India</span> Deaths</div>\r\n                    <div className=\"in-deaths\">{this.state.indiaDeaths}</div>\r\n                  </div>\r\n                </Col>\r\n                <Col md={3} xs={6}>\r\n                  <div className=\"card1\">\r\n                    <div><span className=\"card1-in\">India</span> Recovered</div>\r\n                    <div className=\"in-recovered\">{this.state.indiaRecovered}</div>\r\n                  </div>\r\n                </Col>\r\n              </Row>\r\n              \r\n            </Col>\r\n\r\n            <Col md={2}></Col>\r\n\r\n          </Row>    \r\n\r\n          \r\n          <Row>\r\n\r\n            <Col md=\"6\">\r\n              <div className=\"graph-c\">\r\n                <div className=\"mt-3 mb-2 text-center\">Total confirmed cases, (<s>active cases</s>,) recoveries and deaths</div>\r\n                <FlexibleXYPlot \r\n                  height={250} \r\n                  {...{xDomain, yDomain}} \r\n                  margin={{left: 80}} \r\n                  onMouseLeave={() => this.setState({hoveredNode1: null, hoveredNode2: null, hoveredNode3: null})}\r\n                  className=\"graph1-c\"\r\n                >\r\n                  <HorizontalGridLines />\r\n                  <VerticalGridLines />\r\n                  <XAxis />\r\n                  <YAxis />\r\n                  <ChartLabel \r\n                    text=\"X Axis (Days from 30 Jan 2020)\"\r\n                    className=\"alt-x-label\"\r\n                    includeMargin={false}\r\n                    xPercent={0.025}\r\n                    yPercent={1.01}\r\n                  />\r\n                  <ChartLabel \r\n                    text=\"count\"\r\n                    className=\"alt-y-label\"\r\n                    includeMargin={false}\r\n                    xPercent={0.06}\r\n                    yPercent={0.06}\r\n                    style={{\r\n                      transform: 'rotate(-90)',\r\n                      textAnchor: 'end'\r\n                    }}\r\n                  />\r\n                  <Line\r\n                    className=\"first-series\"\r\n                    data={this.state.graph_data_11}\r\n                    onNearestX={(value, { index }) => {this.setState({hoveredNode1: value}); } }\r\n                    xOffset={0}\r\n                    yOffset={0}\r\n                    color=\"#FFCA28\"\r\n                  />\r\n                  {/* <Line\r\n                    className=\"first-series\"\r\n                    data={this.state.graph_data_1}\r\n                  /> */}\r\n                  <Line\r\n                    className=\"first-series\"\r\n                    data={this.state.graph_data_13}\r\n                    onNearestX={(value, { index }) => {this.setState({hoveredNode2: value}); } }\r\n                    xOffset={300}\r\n                    yOffset={300}\r\n                    color=\"#43A047\"\r\n                  />\r\n                  <Line\r\n                    className=\"first-series\"\r\n                    data={this.state.graph_data_14}\r\n                    onNearestX={(value, { index }) => {this.setState({hoveredNode3: value}); } } \r\n                    color=\"#e53935\"\r\n                  />\r\n                  {hoveredNode1 && (\r\n                    <Hint\r\n                      getX={d => d.x}\r\n                      getY={d => d.y}\r\n                      value={{\r\n                        Date: hoveredNode1.x,\r\n                        '_____':'______________',\r\n                        Confirmed: hoveredNode1.y,\r\n                        Recovered: hoveredNode2.y,\r\n                        Deaths: hoveredNode3.y\r\n                      }}\r\n                      style={{marginLeft: 100, marginTop: -200}}\r\n                    />\r\n                  )}\r\n\r\n                </FlexibleXYPlot>\r\n                <div className=\"color-legend\">\r\n                  <DiscreteColorLegend orientation=\"horizontal\" items={ITEMS1} />\r\n                </div>\r\n              </div>\r\n            </Col>\r\n\r\n            <Col md=\"6\">\r\n              <div className=\"graph-c\">\r\n                <div className=\"mt-3 mb-2 text-center\">Daily new deaths</div>\r\n                <FlexibleXYPlot height={250} xDomain={[0, 250]} yDomain={[0, 2500]} margin={{left: 80}} onMouseLeave={() => this.setState({hoveredNodeNewDeaths: null})}>\r\n                  <HorizontalGridLines />\r\n                  <VerticalGridLines />\r\n                  <XAxis />\r\n                  <YAxis />\r\n                  <ChartLabel \r\n                    text=\"X Axis (Days from 30 Jan 2020)\"\r\n                    className=\"alt-x-label\"\r\n                    includeMargin={false}\r\n                    xPercent={0.025}\r\n                    yPercent={1.01}\r\n                  />\r\n                  <ChartLabel \r\n                    text=\"count\"\r\n                    className=\"alt-y-label\"\r\n                    includeMargin={false}\r\n                    xPercent={0.06}\r\n                    yPercent={0.06}\r\n                    style={{\r\n                      transform: 'rotate(-90)',\r\n                      textAnchor: 'end'\r\n                    }}\r\n                  />\r\n                  <Line\r\n                    className=\"first-series\"\r\n                    data={this.state.graph_data_21}\r\n                    color=\"#e53935\"\r\n                    onNearestX={(value, { index }) => {this.setState({hoveredNodeNewDeaths: value}); } } \r\n                  />\r\n                  {hoveredNodeNewDeaths && (\r\n                    <Hint\r\n                      getX={d => d.x}\r\n                      getY={d => d.y}\r\n                      value={{\r\n                        Date: hoveredNodeNewDeaths.x,\r\n                        '_____':'______________',\r\n                        Deaths: hoveredNodeNewDeaths.y\r\n                      }}\r\n                      style={{marginLeft: 100, marginTop: -200}}\r\n                    />\r\n                  )}\r\n                </FlexibleXYPlot>\r\n                <div className=\"color-legend\">\r\n                  <DiscreteColorLegend orientation=\"horizontal\" items={ITEMS2} />\r\n                </div>\r\n              </div>\r\n            </Col>\r\n\r\n          </Row>\r\n\r\n                    \r\n          <Row>\r\n\r\n            <Col md=\"6\">\r\n              <div className=\"graph-c\">\r\n                <div className=\"mt-3 mb-2 text-center\">Daily new cases</div>\r\n                <FlexibleXYPlot height={250} yDomain={[0, 100000]} xDomain={[0, 250]} margin={{left: 80}} onMouseLeave={() => this.setState({hoveredNodeNewCases: null})}>\r\n                  <HorizontalGridLines />\r\n                  <VerticalGridLines />\r\n                  <XAxis />\r\n                  <YAxis />\r\n                  <ChartLabel \r\n                    text=\"X Axis (Days from 30 Jan 2020)\"\r\n                    className=\"alt-x-label\"\r\n                    includeMargin={false}\r\n                    xPercent={0.025}\r\n                    yPercent={1.01}\r\n                  />\r\n                  <ChartLabel \r\n                    text=\"count\"\r\n                    className=\"alt-y-label\"\r\n                    includeMargin={false}\r\n                    xPercent={0.06}\r\n                    yPercent={0.06}\r\n                    style={{\r\n                      transform: 'rotate(-90)',\r\n                      textAnchor: 'end'\r\n                    }}\r\n                  />\r\n                  <Line\r\n                    className=\"first-series\"\r\n                    data={this.state.graph_data_2}\r\n                    color=\"#FFCA28\"\r\n                    onNearestX={(value, { index }) => {this.setState({hoveredNodeNewCases: value}); } } \r\n                  />\r\n                  {hoveredNodeNewCases && (\r\n                    <Hint\r\n                      getX={d => d.x}\r\n                      getY={d => d.y}\r\n                      value={{\r\n                        Date: hoveredNodeNewCases.x,\r\n                        '_____':'______________',\r\n                        Deaths: hoveredNodeNewCases.y\r\n                      }}\r\n                      style={{marginLeft: 100, marginTop: -200}}\r\n                    />\r\n                  )}\r\n                </FlexibleXYPlot>\r\n                <div className=\"color-legend\">\r\n                  <DiscreteColorLegend orientation=\"horizontal\" items={ITEMSNEWCASES} />\r\n                </div>\r\n              </div>\r\n            </Col>\r\n\r\n            <Col md=\"6\">\r\n              <div className=\"graph-c\">\r\n                <div className=\"mt-3 mb-2 text-center\">Daily new cases (Bar chart)</div>\r\n                <FlexibleXYPlot height={250} yDomain={[0, 100000]} xDomain={[0, 250]} margin={{left: 80}} onMouseLeave={() => this.setState({hoveredNodeNewCasesBar: null})}>\r\n                  <VerticalGridLines />\r\n                  <HorizontalGridLines />\r\n                  <XAxis />\r\n                  <YAxis />\r\n                  <ChartLabel \r\n                    text=\"X Axis (Days from 30 Jan 2020)\"\r\n                    className=\"alt-x-label\"\r\n                    includeMargin={false}\r\n                    xPercent={0.025}\r\n                    yPercent={1.01}\r\n                  />\r\n                  <ChartLabel \r\n                    text=\"count\"\r\n                    className=\"alt-y-label\"\r\n                    includeMargin={false}\r\n                    xPercent={0.06}\r\n                    yPercent={0.06}\r\n                    style={{\r\n                      transform: 'rotate(-90)',\r\n                      textAnchor: 'end'\r\n                    }}\r\n                  />\r\n                  <BarSeries className=\"vertical-bar-series-example\" data={this.state.graph_data_2}\r\n                    color=\"#FFCA28\" \r\n                    onNearestX={(value, { index }) => {this.setState({hoveredNodeNewCasesBar: value}); } }\r\n                  />\r\n                  {hoveredNodeNewCasesBar && (\r\n                    <Hint\r\n                      getX={d => d.x}\r\n                      getY={d => d.y}\r\n                      value={{\r\n                        Date: hoveredNodeNewCasesBar.x,\r\n                        '_____':'______________',\r\n                        Deaths: hoveredNodeNewCasesBar.y\r\n                      }}\r\n                      style={{marginLeft: 100, marginTop: -200}}\r\n                    />\r\n                  )}\r\n                </FlexibleXYPlot>\r\n                <div className=\"color-legend\">\r\n                  <DiscreteColorLegend orientation=\"horizontal\" items={ITEMSNEWCASESBAR} />\r\n                </div>\r\n              </div>\r\n            </Col>\r\n\r\n          </Row>\r\n\r\n\r\n          <Row>\r\n\r\n            <Col md=\"6\">\r\n              <div className=\"graph-c\">\r\n                <div className=\"mt-3 mb-2 text-center\">Total Confirmed from beginning (30th Jan to Today)</div>\r\n                <FlexibleXYPlot height={250} {...{xDomain, yDomain}} margin={{left: 80}} onMouseLeave={() => this.setState({hoveredNodeTotalConfirmed: null})}>\r\n                  <HorizontalGridLines />\r\n                  <VerticalGridLines />\r\n                  <XAxis />\r\n                  <YAxis />\r\n                  <ChartLabel \r\n                    text=\"X Axis (Days from 30 Jan 2020)\"\r\n                    className=\"alt-x-label\"\r\n                    includeMargin={false}\r\n                    xPercent={0.025}\r\n                    yPercent={1.01}\r\n                  />\r\n                  <ChartLabel \r\n                    text=\"count\"\r\n                    className=\"alt-y-label\"\r\n                    includeMargin={false}\r\n                    xPercent={0.06}\r\n                    yPercent={0.06}\r\n                    style={{\r\n                      transform: 'rotate(-90)',\r\n                      textAnchor: 'end'\r\n                    }}\r\n                  />\r\n                  <Line\r\n                    className=\"first-series\"\r\n                    data={this.state.graph_data_1}\r\n                    color=\"#FFCA28\" \r\n                    onNearestX={(value, { index }) => {this.setState({hoveredNodeTotalConfirmed: value}); } }\r\n                  />\r\n                  {hoveredNodeTotalConfirmed && (\r\n                    <Hint\r\n                      getX={d => d.x}\r\n                      getY={d => d.y}\r\n                      value={{\r\n                        Date: hoveredNodeTotalConfirmed.x,\r\n                        '_____':'______________',\r\n                        Deaths: hoveredNodeTotalConfirmed.y\r\n                      }}\r\n                      style={{marginLeft: 100, marginTop: -200}}\r\n                    />\r\n                  )}\r\n                </FlexibleXYPlot>               \r\n                <div className=\"color-legend\">\r\n                  <DiscreteColorLegend orientation=\"horizontal\" items={ITEMSTOTALCONFIRMED} />\r\n                </div>\r\n              </div>\r\n            </Col>\r\n\r\n            {/* <Col md=\"6\">\r\n              <div className=\"graph-c px-5\">\r\n                <div className=\"mt-3 mb-2 text-center\">Bar chart for Daily confirmed (30th Jan to Today)</div>\r\n                <FlexibleXYPlot height={250} yDomain={[0, 100000]} xDomain={[0, 250]}>\r\n                  <VerticalGridLines />\r\n                  <HorizontalGridLines />\r\n                  <XAxis />\r\n                  <YAxis />\r\n                  <BarSeries className=\"vertical-bar-series-example\" data={this.state.graph_data_2} />\r\n                </FlexibleXYPlot>\r\n              </div>\r\n            </Col> */}\r\n\r\n          </Row>\r\n\r\n          \r\n          <Row className=\"mt-3\">\r\n\r\n            <Col md=\"6\">\r\n              <div className=\"graph-c\">\r\n                <div className=\"mt-3 mb-3 text-center\">Statewise Statistics</div>\r\n                <div style={{height: '400px', overflow: 'auto'}}>\r\n                  <Table hover >\r\n                    <thead>\r\n                      <tr>\r\n                        <th>#</th>\r\n                        <th>State</th>\r\n                        <th>Confirmed</th>\r\n                        <th>Active</th>\r\n                        <th>Deaths</th>\r\n                        <th>Recovered</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>{statewise}</tbody>\r\n                  </Table>\r\n                </div>\r\n                \r\n              </div>\r\n            </Col>\r\n\r\n            <Col md=\"6\">\r\n              <div className=\"graph-c pie-container\">\r\n                <div className=\"mt-3 mb-3 text-center\">Overall Deaths vs Active Cases vs Recovered in India</div>\r\n                <div className=\"\" style={{height: '400px', display: 'flex', alignItems: 'center'}}>\r\n                  <RadialChart\r\n                    data={this.state.pieData}\r\n                    width={300}\r\n                    height={300} \r\n                    colorType=\"literal\"\r\n                    showLabels={true}\r\n                    onValueMouseOver={this.handlePieMouseOver}\r\n                  />\r\n                </div>\r\n                <div className=\"color-legend\">\r\n                  <DiscreteColorLegend orientation=\"horizontal\" items={ITEMSPIEOVERALL} />\r\n                </div>\r\n              </div>\r\n            </Col>\r\n\r\n          </Row>\r\n\r\n          <Row className=\"mt-5 card2-row\">\r\n            <Col md=\"3\" className=\"card2\">\r\n              <div className=\"\">\r\n                <div className=\"c-title\">State having highest cases</div>\r\n                <div className=\"state-name\">Maharashtra</div>\r\n              </div>\r\n            </Col>\r\n            <Col md=\"3\" className=\"card2\">\r\n              <div className=\"\">\r\n                <div className=\"c-title\">State having maximum death rate</div>\r\n                <div className=\"state-name\">Punjab</div>\r\n              </div>\r\n            </Col>\r\n            <Col md=\"3\" className=\"card2\">\r\n            <div className=\"\">\r\n                <div className=\"c-title\">State having highest recovery rate</div>\r\n                <div className=\"state-name\">Andaman & Nicobar Islands</div>\r\n              </div>\r\n            </Col>\r\n          </Row> \r\n          \r\n          <div className=\"\" style={{marginTop: '200px'}}></div>\r\n\r\n          <div className=\"footer-c\">All Rights Reserved &copy; 2020 TrackCoronaTrack</div>\r\n\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nHome.propTypes = {\r\n  fetchLargeData: PropTypes.func.isRequired,\r\n  // largeData: PropTypes.array.isRequired\r\n  // largeData: PropTypes.array\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  largeData: state.home.dataItems\r\n});\r\n\r\nexport default connect(mapStateToProps, { fetchLargeData })(Home);\r\n\r\n","import { FETCH_LARGE_DATA } from './types';\r\n\r\nexport const fetchLargeData = () => dispatch => {\r\n\r\n    fetch('https://api.covid19india.org/data.json')\r\n      .then(res => res.json())\r\n      .then(laData => {\r\n          console.log(laData);\r\n          dispatch({\r\n            type: FETCH_LARGE_DATA,\r\n            payload: laData\r\n          });\r\n        }\r\n      );\r\n\r\n}","import React from 'react';\r\n\r\nclass Home2 extends React.Component {\r\n  render () {\r\n    return (\r\n      <div className=\"h2-container\">\r\n        <div className=\"h2-hero-c\">\r\n          <img src={require('../assets/images/world3.png')} className=\"img-fluid w-100 h2-bg-img\" />\r\n          <div className=\"h2-center-text\">\r\n            <div className=\"h2-title1\">Global Deaths Due To Covid-19</div>\r\n            <div className=\"h2-death-count\">1,00,000</div>\r\n          </div>\r\n        </div>\r\n        <div>\r\n          {/* <div className=\"h2-title1\">Global Deaths Due To Covid-19</div>\r\n          <div className=\"h2-death-count\">1,00,000</div> */}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Home2;","import React from 'react';\r\nimport { Container, Row, Col } from 'reactstrap';\r\n\r\nclass Home3 extends React.Component {\r\n  render () {\r\n    return (\r\n      <div className=\"h3-container\">\r\n        <Container fluid>\r\n\r\n          <Row className=\"pt-5\">\r\n            <Col md=\"5\">\r\n              <div className=\"summary\">\r\n                <div>Businesses bankrupted</div>\r\n                <div>Jobs lost</div>\r\n                <div>Shops closed</div>\r\n                <div>Roads emptied</div>\r\n                <div>Loved ones died</div>\r\n                <div>And world under the shadow of fear</div>\r\n                <div style={{color: 'red'}}>Solution: Not yet found</div>\r\n                <hr />\r\n                {/* <div>THE WORLD FAR FROM NORMAL</div> */}\r\n              </div>\r\n            </Col>\r\n            <Col md=\"7\">\r\n\r\n            </Col>\r\n          </Row>\r\n\r\n          <Row>\r\n            <Col md=\"5\"></Col>\r\n            <Col md=\"7\">\r\n              <div className=\"rhs1-container\">\r\n                <div className=\"country-title\">India</div>\r\n                <div className=\"h3-death-big-num\">10,000 Deaths</div>\r\n                {/* <div className=\"h3-stat\">Confirmed: 10,000</div>\r\n                <div className=\"h3-stat\">Active: 10,000</div>\r\n                <div className=\"h3-stat\">Deaths: <span className=\"h3-death-num\">10,000</span></div>\r\n                <div className=\"h3-stat\">Recovered: <span className=\"h3-recovered-num\">10,000</span></div> */}\r\n                <div><img src={require('../assets/images/map4.png')} style={{height: '400px'}} className=\"h2-bg-img\" /></div>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n\r\n        </Container>\r\n        \r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Home3;","import React from 'react';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Link,\r\n  Redirect,\r\n  withRouter\r\n} from 'react-router-dom';\r\n\r\n// import LandingPage from '../pages/LandingPage';\r\nimport Home from '../pages/Home';\r\nimport Home2 from '../pages/Home2';\r\nimport Home3 from '../pages/Home3';\r\n\r\nexport default class Main extends React.Component {\r\n  render() {\r\n    return(\r\n      <Router>\r\n        <div>\r\n\r\n          {/* <Route exact path=\"/\" component={LandingPage} /> */}\r\n          <Route exact path=\"/\" component={Home} />\r\n\r\n          <Route exact path=\"/home2\" component={Home2} />\r\n          <Route exact path=\"/home3\" component={Home3} />\r\n\r\n        </div>\r\n      </Router>\r\n    )\r\n  }\r\n}","import React from 'react';\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nimport Main from './components/Main';\nimport './App.css';\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Main />\n    </Provider>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}